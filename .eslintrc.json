{
  "parser": "babel-eslint",
  "globals": {
    "BigInt": "function",
    "BigInt64Array": "function",
    "BigUint64Array": "function",
    "CivilDate": "function",
    "CivilDateTime": "function",
    "Instant": "function",
    "ZonedInstant": "function"
  },
  "extends": [
    "plugin:unicorn/recommended"
  ],
  "rules": {
    "unicorn/catch-error-name": "error",
    "unicorn/explicit-length-check": "error",
    "unicorn/filename-case": "error",
    "unicorn/no-abusive-eslint-disable": "error",
    "unicorn/no-process-exit": "error",
    "unicorn/throw-new-error": "error",
    "unicorn/number-literal-case": "error",
    "unicorn/escape-case": "error",
    "unicorn/no-array-instanceof": "error",
    "unicorn/no-new-buffer": "error",
    "unicorn/no-hex-escape": "error",
    "unicorn/custom-error-definition": "off",
    "unicorn/prefer-starts-ends-with": "error",
    "unicorn/prefer-type-error": "error",
    "unicorn/no-fn-reference-in-iterator": "warn",
    "unicorn/import-index": "error",
    "unicorn/new-for-builtins": "error",
    "unicorn/regex-shorthand": "error",
    "unicorn/prefer-spread": "error",
    "unicorn/error-message": "error",
    "unicorn/no-unsafe-regex": "off",
    "unicorn/prefer-add-event-listener": "error",
    "unicorn/no-console-spaces": "error",
    "unicorn/no-unreadable-array-destructuring": "error",
    "unicorn/no-unused-properties": "warn",
    "unicorn/prefer-node-append": "error",
    "unicorn/prefer-query-selector": "error",
    "arrow-body-style": "off",
    "no-console": "off",
    "no-continue": "off",
    "no-undef": "warn",
    "no-invalid-regexp": "warn",
    "no-restricted-properties": ["warn", {
      "object": "Intl",
      "property": "Locale",
      "message": "'Intl.Locale' is not support by Node v10.15.1 but https://v8.dev/blog/v8-release-74"
    }, {
      "object": "Object",
      "property": "fromEntries",
      "message": "`Object.fromEntries, is not support by Node v10.15.1 but https://v8.dev/blog/v8-release-74"
    }, {
      "object": "Math",
      "property": "seededRandoms",
      "message": "`Math.seededRandoms()` (TC39 proposal: Stage 1) and is not supported by Node v10.15.1"
    }, {
      "object": "require",
      "message": "Please call require() directly."
    }],
    "no-restricted-syntax": [
      "warn",
      {
          "selector": "CallExpression[callee.name='setTimeout'][arguments.length!=2]",
          "message": "setTimeout must always be invoked with two arguments."
      },
      {
          "selector": "CallExpression[callee.name='clearTimeout'][arguments.length!=1]",
          "message": "clearTimeout must always be invoked with one argument."
      },
      {
          "selector": "CallExpression[callee.object.name='window'][callee.property.name='clearTimeout'][arguments.length!=1]",
          "message": "window.clearTimeout must always be invoked with one argument."
      },
      {
          "selector": "CallExpression[callee.object.name='Object'][callee.property.name='freeze'][arguments.length!=1]",
          "message": "Object.freeze must always be called with one argument."
      },
      {
          "selector": "CallExpression[callee.object.name='Math'][callee.property.name='degrees']",
          "message": "Math.degrees is in `Math Extensions`, a TC39 proposal on Stage 1"
      },
      {
          "selector": "BinaryExpression[operator=instanceof][right.name=Array]",
          "message": "`instanceof Array` is disallowed. Prefer `Array.isArray()`."
      },
      {
        "selector": "[operator=instanceof]",
        "message": "Using the operator `instanceof` is not allowed, see https://github.com/eslint/eslint/issues/11132"
      },
      {
        "selector": "CallExpression[callee.name.length=1]",
        "message": "avoid call a short function name"
      },
      {
        "selector": "NewExpression[callee.name='RegExp'][arguments.length > 2]",
        "message": "Using 'RegExp' is not allowed with > two args"
      },
      {
        "selector": "Literal[regex]",
        "message": "avoid regular expression literal, see https://github.com/eslint/eslint/issues/11538"
      },
      {
        "selector": "CatchClause[param=null]",
        "message": "Proposal: no-optional-catch-binding rule, see https://github.com/eslint/eslint/issues/10264"
      },
      {
        "selector": "CallExpression > MemberExpression > ThisExpression[parent.property.name='$']",
        "message": "Avoid Jquery (this.$)"
      },
      {
        "selector": "MemberExpression[object.name='$'][property.name='each']",
        "message": "Avoid Jquery ($.each)"
      },
      {
        "selector": "MemberExpression[object.name='$']",
        "message": "Avoid Jquery ($)"
      },
      {
        "selector": "CallExpression[callee.name='Number'][arguments.0.value.length>16]",
        "message": "todo: repondre a https://github.com/eslint/eslint/issues/11279"
      },
      {
        "selector": "CallExpression[callee.name='Number'][arguments.0.value>1234567890123456]",
        "message": "todo: a finir, prefer BigInt (available on Node only) https://github.com/eslint/eslint/issues/11279"
      },
      {
        "selector": "Literal[value>1234567890123456]",
        "message": "todo: a finir aussi https://github.com/eslint/eslint/issues/11279"
      }
    ]
  },
  "plugins": [
    "unicorn"
  ]
}
